# READ ME
Documentation
Are there clear and correct Javadoc comments for the class, method, and/or attributes? Note that both public and private methods and attributes should have Javadoc comments.
Code structure
Does the code satisfy all provided specifications?
Is the code consistently formatted? (Note: For this course, we use the results of the Format Document… command in Visual Studio Code as our correct formatting style.)
Do all methods have a clear purpose?
Is there any debugging code still present that should be commented out or otherwise modified so that it does not run in production mode?
What repeated code is present that could become a single method? (This principle is known as DRY: Don’t repeat yourself.)
Are there any “magic number” constants that should be redefined as final variables (as in Java; other languages will have a different keyword)?
Is there any complexity that can be simplified by the use of multiple methods?

Variables
Are all variables (both attributes and other local variables) have reasonable types and identifiers?
Does each variable have a single purpose in its scope?
Whenever the code assigns a value to a variable, does the code ensure type consistency? For example, does the code use casting appropriately?
Are there variables that can be removed from the code because they are redundant or unused?
Arithmetic operations
Are there any places that floating-point numbers are compared for equality? If so, how can those comparisons be rewritten to be more robust?
Are divisions tested for divide-by-zero?
Loops and conditional statements
Are there any errors in the nesting of loops and conditional statements?
In an if-else chain or switch statement, are the most common conditions tested first?
Does each if-else chain or switch statement address all possible cases? (Note the importance of the final else and default blocks.)
Can readability and robustness be improved by converting an if-else statement to a switch?
Do loops have proper index initialization statements?
Are loop termination conditions guaranteed to return true when the program runs?
Are there statements that can be moved outside of the loop (because they only need to run once) or conditional statement (because they run no matter what the result of the conditional statement is)?
General programming practice
Are indexes tested against array bounds?
Are all return values assigned and returned correctly?
Do methods avoid the use of print statements and instead return values?
Does each statement operate on the correct data?
Does the code provide reasonable results for a wide range of test cases, especially including any potential edge cases?
